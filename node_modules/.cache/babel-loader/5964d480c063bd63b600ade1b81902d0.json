{"ast":null,"code":"var _jsxFileName = \"/Users/jodylorist/Desktop/map-test/map-test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState, useCallback } from 'react';\nimport MapGL from 'react-map-gl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MAPBOX_TOKEN = 'pk.eyJ1Ijoiam9keTU2OSIsImEiOiJja3g3amJ5MGowMW8wMm5zZTlwN3Fjb2t0In0.99DjUaNvteP2DPXThnnHXg'; // Set your mapbox token here\n\nexport default function App() {\n  _s();\n\n  const [viewport, setViewport] = useState({\n    latitude: 37.729,\n    longitude: -122.36,\n    zoom: 11,\n    bearing: 0,\n    pitch: 50\n  });\n  const [interactionState, setInteractionState] = useState({});\n  const [settings, setSettings] = useState({\n    dragPan: true,\n    dragRotate: true,\n    scrollZoom: true,\n    touchZoom: true,\n    touchRotate: true,\n    keyboard: true,\n    doubleClickZoom: true,\n    minZoom: 0,\n    maxZoom: 20,\n    minPitch: 0,\n    maxPitch: 85\n  });\n  const updateSettings = useCallback((name, value) => setSettings(s => ({ ...s,\n    [name]: value\n  })), []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MapGL, { ...viewport,\n      ...settings,\n      width: \"100%\",\n      height: \"100%\",\n      mapStyle: \"mapbox://styles/mapbox/dark-v9\",\n      onViewportChange: setViewport,\n      onInteractionStateChange: s => setInteractionState({ ...s\n      }),\n      mapboxApiAccessToken: MAPBOX_TOKEN\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"5YfuIcVvIDwZ/QxcRcaLcLI9nEk=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jodylorist/Desktop/map-test/map-test/src/App.js"],"names":["React","useState","useCallback","MapGL","MAPBOX_TOKEN","App","viewport","setViewport","latitude","longitude","zoom","bearing","pitch","interactionState","setInteractionState","settings","setSettings","dragPan","dragRotate","scrollZoom","touchZoom","touchRotate","keyboard","doubleClickZoom","minZoom","maxZoom","minPitch","maxPitch","updateSettings","name","value","s"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,cAAlB;;;AAEA,MAAMC,YAAY,GAAG,2FAArB,C,CAAkH;;AAElH,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC;AACvCO,IAAAA,QAAQ,EAAE,MAD6B;AAEvCC,IAAAA,SAAS,EAAE,CAAC,MAF2B;AAGvCC,IAAAA,IAAI,EAAE,EAHiC;AAIvCC,IAAAA,OAAO,EAAE,CAJ8B;AAKvCC,IAAAA,KAAK,EAAE;AALgC,GAAD,CAAxC;AAOA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0Cb,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC;AACvCgB,IAAAA,OAAO,EAAE,IAD8B;AAEvCC,IAAAA,UAAU,EAAE,IAF2B;AAGvCC,IAAAA,UAAU,EAAE,IAH2B;AAIvCC,IAAAA,SAAS,EAAE,IAJ4B;AAKvCC,IAAAA,WAAW,EAAE,IAL0B;AAMvCC,IAAAA,QAAQ,EAAE,IAN6B;AAOvCC,IAAAA,eAAe,EAAE,IAPsB;AAQvCC,IAAAA,OAAO,EAAE,CAR8B;AASvCC,IAAAA,OAAO,EAAE,EAT8B;AAUvCC,IAAAA,QAAQ,EAAE,CAV6B;AAWvCC,IAAAA,QAAQ,EAAE;AAX6B,GAAD,CAAxC;AAcA,QAAMC,cAAc,GAAG1B,WAAW,CAChC,CAAC2B,IAAD,EAAOC,KAAP,KACEd,WAAW,CAACe,CAAC,KAAK,EAChB,GAAGA,CADa;AAEhB,KAACF,IAAD,GAAQC;AAFQ,GAAL,CAAF,CAFmB,EAMhC,EANgC,CAAlC;AASA,sBACE;AAAA,2BACE,QAAC,KAAD,OACMxB,QADN;AAAA,SAEMS,QAFN;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,MAAM,EAAC,MAJT;AAKE,MAAA,QAAQ,EAAC,gCALX;AAME,MAAA,gBAAgB,EAAER,WANpB;AAOE,MAAA,wBAAwB,EAAEwB,CAAC,IAAIjB,mBAAmB,CAAC,EAAC,GAAGiB;AAAJ,OAAD,CAPpD;AAQE,MAAA,oBAAoB,EAAE3B;AARxB;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD;;GA9CuBC,G;;KAAAA,G","sourcesContent":["import * as React from 'react';\nimport {useState, useCallback} from 'react';\nimport MapGL from 'react-map-gl';\n\nconst MAPBOX_TOKEN = 'pk.eyJ1Ijoiam9keTU2OSIsImEiOiJja3g3amJ5MGowMW8wMm5zZTlwN3Fjb2t0In0.99DjUaNvteP2DPXThnnHXg'; // Set your mapbox token here\n\nexport default function App() {\n  const [viewport, setViewport] = useState({\n    latitude: 37.729,\n    longitude: -122.36,\n    zoom: 11,\n    bearing: 0,\n    pitch: 50\n  });\n  const [interactionState, setInteractionState] = useState({});\n  const [settings, setSettings] = useState({\n    dragPan: true,\n    dragRotate: true,\n    scrollZoom: true,\n    touchZoom: true,\n    touchRotate: true,\n    keyboard: true,\n    doubleClickZoom: true,\n    minZoom: 0,\n    maxZoom: 20,\n    minPitch: 0,\n    maxPitch: 85\n  });\n\n  const updateSettings = useCallback(\n    (name, value) =>\n      setSettings(s => ({\n        ...s,\n        [name]: value\n      })),\n    []\n  );\n\n  return (\n    <>\n      <MapGL\n        {...viewport}\n        {...settings}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n        onViewportChange={setViewport}\n        onInteractionStateChange={s => setInteractionState({...s})}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n      />\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}